name: Deploy Static Website to AWS (No Domain)

on:
  push:
    branches:
      - main

env:
  STACK_NAME: StaticWebsiteStack
  BUCKET_NAME: static-website-bucket-uzumaki-lawal-123
  REGION: ${{ secrets.AWS_REGION }}

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: üì• Checkout code
      uses: actions/checkout@v3

    - name: üîê Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.REGION }}

    - name: üèóÔ∏è Deploy CloudFormation stack
      id: deploy_stack
      run: |
        set -e

        echo "Deploying CloudFormation stack..."
        if ! aws cloudformation deploy \
          --template-file cfn/static-website.yaml \
          --stack-name $STACK_NAME \
          --parameter-overrides WebsiteBucketName=${BUCKET_NAME} \
          --capabilities CAPABILITY_NAMED_IAM; then
          
          echo "::error ::CloudFormation deployment failed. Fetching recent stack events..."
          aws cloudformation describe-stack-events --stack-name $STACK_NAME --max-items 10
          exit 1
        fi

    - name: üì§ Sync static site to S3
      run: |
        aws s3 sync website/ s3://${BUCKET_NAME}/

    - name: üö´ Invalidate CloudFront cache
      run: |
        CLOUDFRONT_URL=$(aws cloudformation describe-stacks \
          --stack-name $STACK_NAME \
          --query "Stacks[0].Outputs[?OutputKey=='CloudFrontURL'].OutputValue" \
          --output text)

        DISTRIBUTION_ID=$(echo "$CLOUDFRONT_URL" | cut -d. -f1)

        echo "Invalidating CloudFront cache for Distribution ID: $DISTRIBUTION_ID"

        aws cloudfront create-invalidation \
          --distribution-id "$DISTRIBUTION_ID" \
          --paths "/*"
